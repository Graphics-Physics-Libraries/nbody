#version 450 core

#define EPS2 0.000001

layout (location = 8) uniform float G; 

layout (local_size_x = 1) in;

layout (binding = 0, std430) buffer particles_in
{
  vec4 part_in[];
};

layout (binding = 1, std430) buffer particles_out
{
  vec4 part_out[];
};

vec3 interaction(in vec4 p1,in vec4 p2)
{
  vec3 r = p2.xyz - p1.xyz;
  float dist_sqr = dot(r,r) + EPS2;
  float dist_sixth = dist_sqr*dist_sqr*dist_sqr;
  float inv_dist_cube = inversesqrt(dist_sixth);
  return r*p2.w*inv_dist_cube;
}

void main()
{
  uint id = gl_GlobalInvocationID.x;
  vec4 p1 = part_in[id];
  vec3 pos = p1.xyz;
  for (int i=0;i<part_in.length();++i)
  {
    if (i!=id)
    {
      pos += interaction(p1, part_in[i]);
    }
  }
  part_out[id] = vec4(pos,p1.w);
}